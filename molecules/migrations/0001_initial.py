# Generated by Django 5.2.3 on 2025-06-15 07:42

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="MLModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="모델명")),
                (
                    "model_type",
                    models.CharField(max_length=50, verbose_name="모델 타입"),
                ),
                ("target", models.CharField(max_length=50, verbose_name="예측 대상")),
                (
                    "model_file",
                    models.FileField(upload_to="models/", verbose_name="모델 파일"),
                ),
                (
                    "r2_score",
                    models.FloatField(blank=True, null=True, verbose_name="R² 점수"),
                ),
                ("rmse", models.FloatField(blank=True, null=True, verbose_name="RMSE")),
                ("mae", models.FloatField(blank=True, null=True, verbose_name="MAE")),
                (
                    "training_date",
                    models.DateTimeField(auto_now_add=True, verbose_name="학습 날짜"),
                ),
                (
                    "training_samples",
                    models.IntegerField(default=0, verbose_name="학습 샘플 수"),
                ),
                (
                    "feature_names",
                    models.JSONField(default=list, verbose_name="특성 이름들"),
                ),
                (
                    "feature_importances",
                    models.JSONField(default=dict, verbose_name="특성 중요도"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="활성화")),
            ],
            options={
                "verbose_name": "ML 모델",
                "verbose_name_plural": "ML 모델",
                "ordering": ["-training_date"],
            },
        ),
        migrations.CreateModel(
            name="Compound",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="화합물명")),
                ("smiles", models.TextField(unique=True, verbose_name="SMILES")),
                (
                    "system",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Organophosphate", "Organophosphate"),
                            ("Triazole", "Triazole"),
                            ("Carbamate", "Carbamate"),
                            ("Amide", "Amide"),
                            ("Sulfonylurea", "Sulfonylurea"),
                            ("Anilide", "Anilide"),
                            ("Strobilurin", "Strobilurin"),
                            ("Pyrazole", "Pyrazole"),
                            ("Other", "기타"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="계통",
                    ),
                ),
                (
                    "molecular_weight",
                    models.FloatField(blank=True, null=True, verbose_name="분자량"),
                ),
                ("logp", models.FloatField(blank=True, null=True, verbose_name="LogP")),
                ("tpsa", models.FloatField(blank=True, null=True, verbose_name="TPSA")),
                (
                    "num_h_donors",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="수소 공여체 수"
                    ),
                ),
                (
                    "num_h_acceptors",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="수소 수용체 수"
                    ),
                ),
                (
                    "num_rotatable_bonds",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="회전 가능 결합 수"
                    ),
                ),
                (
                    "num_aromatic_rings",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="방향족 고리 수"
                    ),
                ),
                (
                    "num_heavy_atoms",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="무거운 원자 수"
                    ),
                ),
                (
                    "active_ingredient_content",
                    models.FloatField(
                        blank=True, null=True, verbose_name="활성성분함량(%)"
                    ),
                ),
                (
                    "formulation",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="제형"
                    ),
                ),
                (
                    "field_halflife",
                    models.FloatField(
                        blank=True, null=True, verbose_name="포장반감기(일)"
                    ),
                ),
                (
                    "lab_halflife",
                    models.FloatField(
                        blank=True, null=True, verbose_name="실내반감기(일)"
                    ),
                ),
                (
                    "molecule_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="molecules/",
                        verbose_name="분자 구조 이미지",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성일"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="수정일"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="작성자",
                    ),
                ),
            ],
            options={
                "verbose_name": "화합물",
                "verbose_name_plural": "화합물",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="DataUpload",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "uploaded_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="업로드 시간"),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="uploads/%Y/%m/%d/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                ["xlsx", "xls", "csv"]
                            )
                        ],
                        verbose_name="업로드 파일",
                    ),
                ),
                ("file_name", models.CharField(max_length=255, verbose_name="파일명")),
                (
                    "file_type",
                    models.CharField(max_length=50, verbose_name="파일 타입"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "대기중"),
                            ("processing", "처리중"),
                            ("completed", "완료"),
                            ("failed", "실패"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="상태",
                    ),
                ),
                (
                    "total_rows",
                    models.IntegerField(default=0, verbose_name="전체 행 수"),
                ),
                (
                    "processed_rows",
                    models.IntegerField(default=0, verbose_name="처리된 행 수"),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="오류 메시지"),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="업로드한 사용자",
                    ),
                ),
            ],
            options={
                "verbose_name": "데이터 업로드",
                "verbose_name_plural": "데이터 업로드",
                "ordering": ["-uploaded_at"],
            },
        ),
        migrations.CreateModel(
            name="Prediction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("predicted_value", models.FloatField(verbose_name="예측값")),
                (
                    "confidence_lower",
                    models.FloatField(
                        blank=True, null=True, verbose_name="신뢰구간 하한"
                    ),
                ),
                (
                    "confidence_upper",
                    models.FloatField(
                        blank=True, null=True, verbose_name="신뢰구간 상한"
                    ),
                ),
                (
                    "predicted_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="예측 시간"),
                ),
                (
                    "input_features",
                    models.JSONField(default=dict, verbose_name="입력 특성값"),
                ),
                (
                    "compound",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="predictions",
                        to="molecules.compound",
                        verbose_name="화합물",
                    ),
                ),
                (
                    "model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="molecules.mlmodel",
                        verbose_name="사용된 모델",
                    ),
                ),
                (
                    "predicted_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="예측한 사용자",
                    ),
                ),
            ],
            options={
                "verbose_name": "예측",
                "verbose_name_plural": "예측",
                "ordering": ["-predicted_at"],
            },
        ),
    ]
